/- CodeDog Unicode Library

requirements = [
    [require, Unicode_implementation]
]

LibDescription  ={
    useStatus   ='dynamic'
    description ='Library for Unicode'
    features    =[Unicode]
    platforms   =[Linux, OS-X_Devices, Windows]
}

struct GLOBAL {
    me UnicodeMgr: unicodeMgr
}

struct UnicodeStr {me UnicodeString: UnicodeStr}
struct DateFormat {me SimpleDateFormat: DateFormat}
struct sysLocale {me Locale: sysLocale}
struct Udate {me UDate: Udate}
struct UniErrorCode {me UErrorCode: UniErrorCode}
struct Normalizer {their Normalizer2: Normalizer}
struct USpoofChecker {me USpoofChecker: USpoofChecker}

struct UnicodeMgr {
    me UnicodeString: chooseFormatPattern(me double: graphInterval) <- {
	me UnicodeString: dateFormat
	me double: level1 <- 60*60*24*2
	me double: level2 <- 60*60*24*30*5
	
	/- dividing by 1000 rather than multiplying to avoid int overflow error
	if(graphInterval/1000 > level2) {dateFormat <- "MMM d"}
	else{
	    if(graphInterval/1000 > level1) {dateFormat <- "E, MMM d"}
	    else{dateFormat <- "h:mm a"}
	}
	return(dateFormat)
    }
}
