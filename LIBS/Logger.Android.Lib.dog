/////////// Add routines for C++
requirements = [
    [tagOneOf, Platform, [Android]]
]

interface={
    provides = [Logger_implementation]
    libFiles = []
    headers  = [android.util.Log]
}

LibDescription ={
    useStatus   =  dynamic
    description = 'Logger for Android'
}

struct logger{
    me void: Show()                                             <- <%{isVisible = true;}%>
    me void: Hide()                                             <- <%{isVisible = false;}%>
    me void: Route(me string: routeSpec)                        <- <%{System.out.println(routeSpec+"\n");}%>
}

struct logManager{
    me void: openLogFile() <- <%{}%>
    me void: writeToLog(me string: txt) <- <%{
        System.out.println(txt+"\n");
    }%>
}

struct GLOBAL{
    me void: log(me string: MSG)            <- <%!%GLog.v("GLOBAL",%1)%>
    me void: logInfo(me string: MSG)        <- <%!%GLog.i("GLOBAL",%1)%>
    me void: logCritical(me string: MSG)    <- <%!%GLog.e("GLOBAL",%1)%>
    me void: logFatalError(me string: MSG)  <- <%!%GLog.e("GLOBAL",%1); System.exit(1);%>
    me void: logWarn(me string: MSG)        <- <%!%GLog.w("GLOBAL",%1)%>
    me void: logDbg(me string: MSG)         <- <%!%GLog.d("GLOBAL",%1)%>
}
