[['LIBS/ReadMultiLine.Lib.dog',
  [{'className': 'GLOBAL',
    'fields': [{'fieldID': 'GLOBAL::packUTF8Char(string,uint,uint)',
                'status': 'Impl'},
               {'fieldID': 'GLOBAL::putCharX(charX,uint)', 'status': 'Impl'}]},
   {'className': 'charX',
    'fields': [{'fieldID': 'charX::chr'},
               {'fieldID': 'charX::colorCode'},
               {'fieldID': 'charX::chWidth'}]},
   {'className': 'lineX',
    'fields': [{'fieldID': 'lineX::chars'},
               {'fieldID': 'lineX::printable'},
               {'fieldID': 'lineX::dirty'},
               {'fieldID': 'lineX::startAttrs'},
               {'fieldID': 'lineX::width'},
               {'fieldID': 'lineX::fillPrintable(bool)', 'status': 'Impl'}]},
   {'className': 'EntryX',
    'fields': [{'fieldID': 'EntryX::lines'}, {'fieldID': 'EntryX::attrs'}]},
   {'className': 'lineIterator',
    'fields': [{'fieldID': 'lineIterator::entriesIdx'},
               {'fieldID': 'lineIterator::linesIdx'}]},
   {'className': 'linesMngr',
    'fields': [{'fieldID': 'linesMngr::entries'},
               {'fieldID': 'linesMngr::widthToCur'},
               {'fieldID': 'linesMngr::charsToCur'},
               {'fieldID': 'linesMngr::curMax'},
               {'fieldID': 'linesMngr::totalLines'},
               {'fieldID': 'linesMngr::linesDeleted'},
               {'fieldID': 'linesMngr::currentLine'},
               {'fieldID': 'linesMngr::crntRowInWnd'},
               {'fieldID': 'linesMngr::wndStartY'},
               {'fieldID': 'linesMngr::wndEndY'},
               {'fieldID': 'linesMngr::wndHeight'},
               {'fieldID': 'linesMngr::wndWidth'},
               {'fieldID': 'linesMngr::insertMode'},
               {'fieldID': 'linesMngr::allDirty'},
               {'fieldID': 'linesMngr::crntCharWidth', 'status': 'Impl'},
               {'fieldID': 'linesMngr::lastEntry', 'status': 'Impl'},
               {'fieldID': 'linesMngr::numLinesInSet(lineIterator)',
                'status': 'Impl'},
               {'fieldID': 'linesMngr::isFirstSet(lineIterator)',
                'status': 'Impl'},
               {'fieldID': 'linesMngr::isLastSet(lineIterator)',
                'status': 'Impl'},
               {'fieldID': 'linesMngr::isFirstInSet(lineIterator)',
                'status': 'Impl'},
               {'fieldID': 'linesMngr::isLastInSet(lineIterator)',
                'status': 'Impl'},
               {'fieldID': 'linesMngr::isFirstLine(lineIterator)',
                'status': 'Impl'},
               {'fieldID': 'linesMngr::isLastLine(lineIterator)',
                'status': 'Impl'},
               {'fieldID': 'linesMngr::nextLine(lineIterator)',
                'status': 'Impl'},
               {'fieldID': 'linesMngr::prevLine(lineIterator)',
                'status': 'Impl'},
               {'fieldID': 'linesMngr::lineFromNum(uint)', 'status': 'Impl'},
               {'fieldID': 'linesMngr::calcWidthToCursor(List,uint)',
                'status': 'Impl'},
               {'fieldID': 'linesMngr::setCursorByWidth(List,uint)',
                'status': 'Impl'},
               {'fieldID': 'linesMngr::moveUp', 'status': 'Impl'},
               {'fieldID': 'linesMngr::moveDown', 'status': 'Impl'},
               {'fieldID': 'linesMngr::moveToTop', 'status': 'Impl'},
               {'fieldID': 'linesMngr::moveToBottom', 'status': 'Impl'},
               {'fieldID': 'linesMngr::moveLeft', 'status': 'Impl'},
               {'fieldID': 'linesMngr::moveRight', 'status': 'Impl'},
               {'fieldID': 'linesMngr::moveHome', 'status': 'Impl'},
               {'fieldID': 'linesMngr::moveEnd', 'status': 'Impl'},
               {'fieldID': 'linesMngr::pageUp', 'status': 'Impl'},
               {'fieldID': 'linesMngr::pageDown', 'status': 'Impl'},
               {'fieldID': 'linesMngr::doInsertKey', 'status': 'Empty'},
               {'fieldID': 'linesMngr::backspc', 'status': 'Impl'},
               {'fieldID': 'linesMngr::backTab', 'status': 'Empty'},
               {'fieldID': 'linesMngr::doTab', 'status': 'Empty'},
               {'fieldID': 'linesMngr::clearAll', 'status': 'Empty'},
               {'fieldID': 'linesMngr::clearToEOL', 'status': 'Impl'},
               {'fieldID': 'linesMngr::occludeHist', 'status': 'Empty'},
               {'fieldID': 'linesMngr::prevHist', 'status': 'Empty'},
               {'fieldID': 'linesMngr::nextHist', 'status': 'Empty'},
               {'fieldID': 'linesMngr::copyAll', 'status': 'Empty'},
               {'fieldID': 'linesMngr::pasteString(string)', 'status': 'Empty'},
               {'fieldID': 'linesMngr::cycleSaveModes', 'status': 'Empty'},
               {'fieldID': 'linesMngr::insertChar(charX)', 'status': 'Impl'},
               {'fieldID': 'linesMngr::doEnter', 'status': 'Impl'},
               {'fieldID': 'linesMngr::doDelete', 'status': 'Impl'},
               {'fieldID': 'linesMngr::fetchBuffer(string)',
                'status': 'Impl'}]},
   {'className': 'posRec',
    'fields': [{'fieldID': 'posRec::isStart'},
               {'fieldID': 'posRec::isEnd'},
               {'fieldID': 'posRec::itemParsed'}]},
   {'className': 'posRecStore',
    'fields': [{'fieldID': 'posRecStore::s'},
               {'fieldID': 'posRecStore::ps'},
               {'fieldID': 'posRecStore::colorCodes'},
               {'fieldID': 'posRecStore::posRecStore(string,int)',
                'status': 'Impl'}]},
   {'className': 'readMultiLine',
    'fields': [{'fieldID': 'readMultiLine::bufs'},
               {'fieldID': 'readMultiLine::mgr'},
               {'fieldID': 'readMultiLine::result'},
               {'fieldID': 'readMultiLine::cmd'},
               {'fieldID': 'readMultiLine::promptChars'},
               {'fieldID': 'readMultiLine::message'},
               {'fieldID': 'readMultiLine::readMultiLineGUIMode'},
               {'fieldID': 'readMultiLine::charConsts'},
               {'fieldID': 'readMultiLine::onChangeCallback(uint)',
                'status': 'Impl'},
               {'fieldID': 'readMultiLine::submitText', 'status': 'Impl'},
               {'fieldID': 'readMultiLine::editOK(uint)', 'status': 'Impl'},
               {'fieldID': 'readMultiLine::addUserMesgAndTopBar(string)',
                'status': 'Impl'},
               {'fieldID': 'readMultiLine::clearEntry(EntryX)',
                'status': 'Impl'},
               {'fieldID': 'readMultiLine::appendTextToEntry(EntryX,posRecStore)',
                'status': 'Impl'},
               {'fieldID': 'readMultiLine::appendNewEntry(EntryX,posRecStore)',
                'status': 'Impl'},
               {'fieldID': 'readMultiLine::addUserMesg(string,uint)',
                'status': 'Impl'},
               {'fieldID': 'readMultiLine::promptWidth'},
               {'fieldID': 'readMultiLine::refreshDisplay(uint)',
                'status': 'Impl'},
               {'fieldID': 'readMultiLine::readLines', 'status': 'Impl'},
               {'fieldID': 'readMultiLine::initNCurses', 'status': 'Impl'},
               {'fieldID': 'readMultiLine::readMultiLine(uint,string)',
                'status': 'Impl'}]}]]]
