// testEvents.dog

LinuxBuild: CPU='amd64' Lang='c++' optimize='speed';


BuildCmd = `g++ -std=gnu++11 testParse.cpp -o test`
Title = "CodeDog parsing test"
FileName = "testGUI.cpp"
Version = "0.8"
CopyrightMesg = "Copyright (c) 2015-2016 Bruce Long"
Authors = "Bruce Long"
Description = "This test file is for testing CodeDog."

LicenseText = `This file is part of the "CodeDog test suite"
The CodeDog test suite is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
The CodeDog test suite is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with the CodeDog test suite.  If not, see www.gnu.org/licenses.`

langToGen="CPP"

testEventHandling = {ID='testEvH' maxEvents='100000' types=[GUI_event] runFromMain=1}
initCode="SDL_Init(SDL_INIT_VIDEO+SDL_INIT_AUDIO+SDL_INIT_TIMER)"
runCode = "EventMaster_testEvH EvMaster; EvMaster.primeEvents(); EvMaster.eventLoop();"
deinitCode="SDL_Quit()"

Include=`<memory>, <fstream>, <cstdint>, <string>, <cstring>, <vector>, <map>, <cstdarg>, <iostream>`

#include libraryTags.dog

struct GUI_event {
    me uint32: type
    me uint32: value
    me bool: Prime_GUI_event() <- { return(true) }
    me bool: Handle_GUI_event() <- { return(true) }
}

do Gen_EventHandler(testEventHandling)
do Write_Main(eventLoop)
